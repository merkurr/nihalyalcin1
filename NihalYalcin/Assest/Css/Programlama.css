Visual Basic Tarihi Geliþim Süreci
   Visual Basic Microsoft tarafýndan geliþtirilmiþ görsel ve nesne tabanlý programlama dilidir. Basic kelimesinin açýlýmý Beginners All-purpose Symbolic Instruction Cod’dur. Türkçeye ise ‘yeni baþlayanlar için çok amaçlý sembolik talimat kodu’ olarak çevrilir. Visual Basic, Profosör Jhony Kemeny ve Thomas Kurtz tarafýndan icat edilip geliþtirilmiþtir. Ýlk oluþturulduðu zamanlarda Dos tabanlý olan Visual Basic ile editörler kullanýlýrdý. ( GWBASIC, FREE BASIC, QBASIC vb.)
   Ýlk Basic derleyicisi 1991 yýlýnda Windows için Visual Basic 1.0 piyasaya sürüldü. Görsel tasarým yapabilen ilk derleyici böylece kullanýlmaya baþlandý. 1991 yýlýnýn Eylül ayýnda Visual Basic DOS’u programcýlara sunuldu. Visual Basýc 2.0 ise 1992 yýlýnda Visual Basic 1.0’ýn geliþtirilmesi ile kullanýcýlarýn hizmetine sunuldu ve DOS’lu kod yazmak bu sürüm ile geçmiþte kaldý. !995 yýlýnda Visual Basic 4.0 3 paketi ile birlikte kullanýma sunuldu. (Enterprise, Standart ve Profesyonel) Visual Basic 4.0 diðerlerinden farklý olarak .ocx uzantýlý denetimler kullanýlmaya baþlanmýþ oldu. Visual Basic 1997 yýlýnda önceki sürümün eksikleri tamamlanarak yazýlýmcýlarýn hizmetine sunuldu. Visual Basic 6.0 ise vb.net’e geçmeden önce diðer sürümler arasýnda en kapsamlý olan programlama dili oldu. Windows wista hariç diðer iþletim sistemlerine kurulabiliyordu. Visual Basic daha sonra VB.NET sürümlerine geçerek tüm programlar için gerekli altyapýya sahip oldu. Kod yazma iþlemleri kýsaltýlmýþ oldu ve esnek program yazabilmeyi kullanýcýlarýna sundu. Visual Studio 2003 VB.NET’in devamý yani ikinci sürümü olarak arayüzü geliþtirilmiþ olarak piyasaya giriþ yaptý. Devamýnda ise Visual Studio 2005 ve Visual Studio 2008 piyasaya sunuldu. Son olarak Visual Studio 2010 3 sürümü ile kullanýcýlarý ile buluþtu. 
Yapýsal Programlama( Structured Programming)
   Yapýsal Programlama, mantýksal bloklara bölünebilen ve karmaþýk uzun programlarýn yazýlmasýna olanak saðlayan programlamadýr.  Yapýsal programlama ile büyük kodlar parçalanarak küçük anlaþýlabilir yapýlar haline getirilir. Dijkstra ve Jackson’ýn Yapýsal Programlamasý olarak iki bölümde incelenebilir. 
   Dijkstra’nýn yapýsal programlamasýnda program alt bölümlere ayrýlýr. Programýn giriþ ve çýkýþ noktalarýnýn olmasý karakteristik özellikleridir.
   Jackson’ýn Yapýsal Programlamasý(JYP), veri akýþý yapýsý ile program yapýsý arasýndaki iliþki vurgulanmýþtýr. Temel eylemler, sýralamalar, tekrarlar ve seçimler ise temel karakteristik özellikleridir.
Nesne Tabanlý Programlama( Object-Oriented Programming)
   Programlar birçok nesnenin bir araya gelerek oluþturulur. Sýnýflar içerisine yazýlan kodlar, sýnýflar üzerinden oluþturulan nesneler üzerinden çaðrýlýr. Üç prensibe sahiptir.
   Encapsulation(Kapsülleme); metot ve özellik iþlemleri nesnenin niteliklerini belirtir. Örneðin bir binanýn yüksekliði, rengi gibi…
   Inheritance(Kalýtým); bir nesnenin bir üst nesneden etkilenerek oluþturulmasýnýn. Örneðin bir motosikletin parçalardan oluþmasý ve motosikleti oluþturan parçalarýnda, motosikletten etkilenmesi gibi…
   Polymorphism(Çok Biçimlilik); belirli olan bir metodun birçok nesne taraþýndan kullanýlmasýdýr.
   Nesne tabanlý Programlama dilleri; C#, Pascal, Java olarak örneklendirilebilir. Farklý objelere kolaylýkla entegre edilmesi ve projenin tamamýnda bir güncelleme olmasý halinde kod yönetiminin kolay olmasý en büyük avantajlarý arasýnda yer alýr.
Tümleþik Geliþtirme Ortamý(IDE)
   Programcýlarýn kod yazarken hýzlý ve rahat yazýlým geliþtirmesini hedef edinen ve geliþtirme sürecini sistemli bir biçimde organize edebilen, geliþtirme sürecinin verimli yürütülmesini destekleyen araçlarýn tamamýný bulunduran yazýlým türüdür. 
   Sözdizimi renklendirmesi yapabilen editör, gerçek zamanlý çizelge, derleyici ve hata ayýklayýcý tümleþik geliþtirme ortamlarýnda olmasý gereken özelliklerdir. Örnek olarak; Dev-C++, Microsoft Visual Studio verilebilir.
